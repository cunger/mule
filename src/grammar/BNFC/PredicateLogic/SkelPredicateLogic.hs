module SkelPredicateLogic where

-- Haskell module generated by the BNF converter

import AbsPredicateLogic
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident string -> failure x
transExpression :: Expression -> Result
transExpression x = case x of
  Term ident -> failure x
  Predication ident expressions -> failure x
  Conjunction expression1 expression2 -> failure x
  Disjunction expression1 expression2 -> failure x
  Implication expression1 expression2 -> failure x
  Negation expression -> failure x
  Abstraction ident expression -> failure x
  Application expression1 expression2 -> failure x
  Quantification quantifier ident expression1 expression2 -> failure x
transQuantifier :: Quantifier -> Result
transQuantifier x = case x of
  Exists -> failure x
  Forall -> failure x
  Most -> failure x
  Many -> failure x
  The -> failure x
  No -> failure x
  Few -> failure x

